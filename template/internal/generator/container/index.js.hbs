/**
*
* {{ properCase ComponentName }}
*
*/

{{#if wantMemo}}
import React, { memo } from 'react';
{{else}}
import React from 'react';
{{/if}}
{{#if wantHeaders}}
import { Helmet } from 'react-helmet-async';
{{/if}}
{{#if wantTranslations}}
import { useTranslation } from 'react-i18next';
{{/if}}
{{#if wantSlice}}
import { useSelector, useDispatch } from 'react-redux';
{{/if}}

{{#if wantSlice}}
{{#if wantSaga}}
import { useInjectReducer, useInjectSaga } from 'redux-injectors';
{{else}}
import { useInjectReducer } from 'redux-injectors';
{{/if}}
{{else}}
{{#if wantSaga}}
import { useInjectSaga } from 'redux-injectors';
{{/if}}
{{/if}}
{{#if wantSlice}}
import { reducer, sliceKey } from './slice';
import select{{ properCase ComponentName }} from './selectors';
{{/if}}
{{#if wantSaga}}
import {{ camelCase ComponentName }}Saga from './saga';
{{/if}}

{{#if wantTemplate}}
import Template from 'app/components/Template';
{{/if}}


{{#if wantMemo}}
const {{ properCase ComponentName }} = memo((props) => {
{{else}}
function {{ properCase ComponentName }}(props) {
{{/if}}
{{#if wantSlice}}
useInjectReducer({ key: sliceKey, reducer });
{{/if}}
{{#if wantSaga}}
  {{#if wantSlice}}
  useInjectSaga({ key: sliceKey, saga: {{ camelCase ComponentName }}Saga });
  {{else}}
  useInjectSaga({ key: '{{ camelCase ComponentName }}', saga: {{ camelCase ComponentName }}Saga });
  {{/if}}
{{/if}}

{{#if wantSlice}}
// eslint-disable-next-line no-unused-vars
const {{ camelCase ComponentName }} = useSelector(select{{ properCase ComponentName }});
// eslint-disable-next-line no-unused-vars
const dispatch = useDispatch();
{{/if}}

{{#if wantTranslations}}
// eslint-disable-next-line no-unused-vars
const { t, i18n } = useTranslation();
{{/if}}

return (
{{#if wantTemplate}}
<Template title="Title" description="Description">
{{else}}
<>
{{/if}}
  {{#if wantHeaders}}
  <Helmet>
    <title>{{properCase ComponentName}}</title>
    <meta name="description" content="Description of {{properCase ComponentName}}" />
  </Helmet>
  {{/if}}
  <div>
    {{#if wantTranslations}}
    {t('')}
    {{/if}}
  </div>
{{#if wantTemplate}}
</Template>
{{else}}
</>
{{/if}}
);

{{#if wantMemo}}
});
{{else}}
};
{{/if}}

export default {{ properCase ComponentName }};